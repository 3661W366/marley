
==Joints


"Joints" are pre-packaged resource sets that can be included in a Marley application.  A joint can be added to the current Resources by running Marley.joint('_joint_name_').  The Marley.joint method will then do the following:

* Find a file named '_joint_name_' in the 'joints/' directory.
* Require that file.
* run its #smoke method.

The Joint#smoke method looks for 3 modules inside the joint's namespace:  Resources, ClassMethods, and InstanceMethods.  

* if the Resources module exists, Joint#smoke will copy all of its constants to Marley::Resources.
* If the ClassMethods module exists, Joint#smoke will cycle through the modules within it, and extend objects in Marley::Resources with the same name.
* If the InstanceMethods module exists, Joint#smoke will cycle through the modules within it, and call their #append_features with the corresponding objects in Marley::Resources with the same name.

For now, there are 5 joints included in the Marley distribution:

* Basic User
* Basic Messaging
* Basic Menu System
* Tagging
* Tagged Messaging

With a bit of configuration, these comprise the example forum application.

:include: rdoc/hello.rb

:include: rdoc/example_joint.rb

    setup
        @client=Marley::TestClient.new(:resource_name => 'hello')
    end

example: without the joint, then with the joint

    >> MR.constants
    => ["Hello"]
    >> @client.read
    => "\"Hello World!\""
    >> @client.read({}, :resource_name => 'goodbye',:code => 404)
    => [:error, {:description=>"Not Found", :error_type=>"routing", :error_details=>nil}]
    >> @client.create({}, :code => 404)
    => [:error, {:description=>"Not Found", :error_type=>"routing", :error_details=>nil}]


    >> Marley.joint('example_joint').class
    => Marley::Joints::ExampleJoint
    >> MR.constants.sort
    => ["GoodBye", "Hello"]
    >> @client.read({}, :resource_name => 'goodbye')
    => false
    >> @client.read({}, :resource_name => 'good_bye')
    => "\"goodbye\""
    >> @client.create({})
    => " world"
    >> @client.create({},:method => 'howdy')
    => "howdy world"



