=Marley

Marley is a project consisting of several parts:

* A Sinatra-like micro-framework for returning data from model-like entities (Ruby, based on thin/rack)
* A framework for adding reusable content to the framework ("Joints")
* A JSON data format ("Reggae") 
* A simple JS client ("Jamaica") which renders Reggae as HTML.


More about each part:

==Marley

* Marley looks for resources (as indicated by the first part of the URL) in the Marley::Resources namespace as constants
  * A resource must respond either to a #controller method or to one or more of #rest_get, #rest_put, #rest_put, or #rest_delete. 
  * Resources implementing a #controller method should return an object that responds to one or more REST verbs from that method
  * REST verb methods should return a string to be sent to the client

* Marley provides 2 plugins for the Sequel ORM.
  * RestConvenience - Adds a default controller for standard rest routes to a model
  * RestAuthorization - Adds default authorization to a model

==Joints

"Joints" are pre-packaged resource sets that can be included in a Marley application.  The joints API is very much a work in progress.

==Reggae

The server and client use a JSON based data representation I developed for this project and tentatively named "Reggae."  It is documented roughly in Reggae.ebnf.  I am considering some structural changes, which are reflected in Reggae2.ebnf.  I'd love some comments on this.

==Jamaica

The default Marley client is "Jamaica", which consists of JS/CSS for browsers.  It sucks right now and I'm hoping somebody takes it over as a sub-project, but it does work - at least on FF.


